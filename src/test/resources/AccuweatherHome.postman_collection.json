{
	"info": {
		"_postman_id": "8144c6c1-211a-49ce-95b8-3224fd4a90aa",
		"name": "AccuweatherHome",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "31268054",
		"_collection_link": "https://www.postman.com/aviation-engineer-49335238/workspace/accuweather-demo/collection/31268054-8144c6c1-211a-49ce-95b8-3224fd4a90aa?action=share&source=collection_link&creator=31268054"
	},
	"item": [
		{
			"name": "CityList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Kinshasa\");\r",
							"});\r",
							"pm.test('Count object = ' + pm.response.json().length, function() {\r",
							"    pm.expect(pm.response.json().length).to.equal(100);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://dataservice.accuweather.com/locations/v1/topcities/100",
					"protocol": "http",
					"host": [
						"dataservice",
						"accuweather",
						"com"
					],
					"path": [
						"locations",
						"v1",
						"topcities",
						"100"
					]
				}
			},
			"response": []
		},
		{
			"name": "CountryList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"pm.test(\"Status code name has string\", function () {\r",
							"    pm.response.to.have.status(\"OK\");\r",
							"});\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.environment.get(\"2174888\");\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"[]\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/locations/v1/countries/CO",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"locations",
						"v1",
						"countries",
						"CO"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetLocation",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].Key).to.eql(\"107487\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Bogota\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].Country.LocalizedName).to.eql(\"Colombia\");\r",
							"});        "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/locations/v1/cities/autocomplete?q=Bogota",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"locations",
						"v1",
						"cities",
						"autocomplete"
					],
					"query": [
						{
							"key": "q",
							"value": "Bogota"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetWeatherTenDay",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {\r",
							"    pm.response.to.have.status(401);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/forecasts/v1/daily/10day/107487",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"forecasts",
						"v1",
						"daily",
						"10day",
						"107487"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetWeatherOneDay",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test('Count object = ' + pm.response.json().length, function() {\r",
							"    pm.expect(pm.response.json().DailyForecasts.length).to.equal(1);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json().Headline.Category).to.eql(\"rain\");\r",
							"});  "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/forecasts/v1/daily/1day/107487",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"forecasts",
						"v1",
						"daily",
						"1day",
						"107487"
					]
				}
			},
			"response": []
		},
		{
			"name": "CityNeighbors",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].Key).to.eql(\"108205\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].LocalizedName).to.eql(\"Soacha\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].Country.ID).to.eql(\"CO\");\r",
							"}); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/locations/v1/cities/neighbors/107487",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"locations",
						"v1",
						"cities",
						"neighbors",
						"107487"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetWeatherOneHour",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].EpochDateTime).to.eql(1712512800);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].Temperature.Value).to.eql(71.0);\r",
							"});  "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/forecasts/v1/hourly/1hour/107487",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"forecasts",
						"v1",
						"hourly",
						"1hour",
						"107487"
					]
				}
			},
			"response": []
		},
		{
			"name": "CitySearch",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].Region.ID).to.eql(\"SAM\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.json()[0].Rank).to.eql(10);\r",
							"}); "
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/locations/v1/cities/search?q=Bogota",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"locations",
						"v1",
						"cities",
						"search"
					],
					"query": [
						{
							"key": "q",
							"value": "Bogota"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetGeoposition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 503\", function () {\r",
							"    pm.response.to.have.status(503);\r",
							"});\r",
							"pm.test(\"Response time is less than 1000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(1000);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"ServiceUnavailable\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/locations/v1/cities/geoposition/search?q=latitude -4.628 to 4.628, longitude -74.077 to 74.077",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"locations",
						"v1",
						"cities",
						"geoposition",
						"search"
					],
					"query": [
						{
							"key": "q",
							"value": "latitude -4.628 to 4.628, longitude -74.077 to 74.077"
						}
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "apikey",
		"apikey": [
			{
				"key": "in",
				"value": "query",
				"type": "string"
			},
			{
				"key": "value",
				"value": "\t7uoA7fjsGRMMN75twr6wLTlNIHGdUO2n",
				"type": "string"
			},
			{
				"key": "key",
				"value": "apikey",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "api-key-my",
			"value": "\t7uoA7fjsGRMMN75twr6wLTlNIHGdUO2n",
			"type": "string"
		},
		{
			"key": "baseUrl",
			"value": "https://dataservice.accuweather.com/",
			"type": "string"
		}
	]
}